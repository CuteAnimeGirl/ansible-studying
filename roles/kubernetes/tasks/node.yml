---
- name: Check if kubelet service is already active
  systemd:
    name: kubelet
  register: kubelet_service
  changed_when: false
  failed_when: false
  check_mode: no

- name: Skip node configuration if kubelet already active
  debug:
    msg: "Skipping node configuration - kubelet is already active"
  when: kubelet_service.status.ActiveState in ['active', 'activating']

- name: Configure node
  block:
    - name: Disable swap
      command: swapoff -a
      ignore_errors: yes
    
    - name: Comment out swap in fstab
      replace:
        path: /etc/fstab
        regexp: '^(.*swap.*)$'
        replace: '#\1'
    
    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - br_netfilter
        - overlay
    
    - name: Ensure kernel modules are loaded on boot
      copy:
        dest: /etc/modules-load.d/k8s.conf
        content: |
          br_netfilter
          overlay
    
    - name: Configure kernel parameters
      copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward                 = 1
    
    - name: Apply sysctl settings
      command: sysctl --system
    
    - name: Install required packages
      apt:
        name:
          - ca-certificates
          - curl
          - apt-transport-https
          - gnupg
        state: present
        update_cache: yes
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: no
    
    - name: Generate default containerd config
      command: containerd config default
      register: containerd_config
      changed_when: false
    
    - name: Configure containerd to use systemd cgroup
      copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout | regex_replace('SystemdCgroup\\s*=\\s*false', 'SystemdCgroup = true') }}"
    
    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes
    
    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: no
    
    - name: Hold Kubernetes packages to prevent automatic upgrades
      command: apt-mark hold kubelet kubeadm kubectl
    
    - name: Enable kubelet service
      systemd:
        name: kubelet
        enabled: yes
        state: started
  when: kubelet_service.status.ActiveState not in ['active', 'activating']